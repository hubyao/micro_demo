// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: user/user.proto

package mu_micro_book_user_srv_service

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UserOauthLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserOauth *UserOauth `protobuf:"bytes,1,opt,name=userOauth,proto3" json:"userOauth,omitempty"`
}

func (x *UserOauthLoginReq) Reset() {
	*x = UserOauthLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOauthLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOauthLoginReq) ProtoMessage() {}

func (x *UserOauthLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOauthLoginReq.ProtoReflect.Descriptor instead.
func (*UserOauthLoginReq) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{0}
}

func (x *UserOauthLoginReq) GetUserOauth() *UserOauth {
	if x != nil {
		return x.UserOauth
	}
	return nil
}

type UserOauthLoginRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse *BaseResponse `protobuf:"bytes,1,opt,name=baseResponse,proto3" json:"baseResponse,omitempty"`
	Token        string        `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Uid          uint64        `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"` // 用户id
}

func (x *UserOauthLoginRsp) Reset() {
	*x = UserOauthLoginRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOauthLoginRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOauthLoginRsp) ProtoMessage() {}

func (x *UserOauthLoginRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOauthLoginRsp.ProtoReflect.Descriptor instead.
func (*UserOauthLoginRsp) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{1}
}

func (x *UserOauthLoginRsp) GetBaseResponse() *BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *UserOauthLoginRsp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UserOauthLoginRsp) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type AddUserOauthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserOauth *UserOauth `protobuf:"bytes,1,opt,name=userOauth,proto3" json:"userOauth,omitempty"`
}

func (x *AddUserOauthReq) Reset() {
	*x = AddUserOauthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserOauthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserOauthReq) ProtoMessage() {}

func (x *AddUserOauthReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserOauthReq.ProtoReflect.Descriptor instead.
func (*AddUserOauthReq) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{2}
}

func (x *AddUserOauthReq) GetUserOauth() *UserOauth {
	if x != nil {
		return x.UserOauth
	}
	return nil
}

type AddUserOauthRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserOauthId uint64 `protobuf:"varint,1,opt,name=userOauthId,proto3" json:"userOauthId,omitempty"`
}

func (x *AddUserOauthRsp) Reset() {
	*x = AddUserOauthRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserOauthRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserOauthRsp) ProtoMessage() {}

func (x *AddUserOauthRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserOauthRsp.ProtoReflect.Descriptor instead.
func (*AddUserOauthRsp) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{3}
}

func (x *AddUserOauthRsp) GetUserOauthId() uint64 {
	if x != nil {
		return x.UserOauthId
	}
	return 0
}

type UpdateUserOauthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse *BaseResponse `protobuf:"bytes,1,opt,name=baseResponse,proto3" json:"baseResponse,omitempty"`
	UserOauth    *UserOauth    `protobuf:"bytes,2,opt,name=userOauth,proto3" json:"userOauth,omitempty"`
}

func (x *UpdateUserOauthReq) Reset() {
	*x = UpdateUserOauthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserOauthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserOauthReq) ProtoMessage() {}

func (x *UpdateUserOauthReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserOauthReq.ProtoReflect.Descriptor instead.
func (*UpdateUserOauthReq) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateUserOauthReq) GetBaseResponse() *BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *UpdateUserOauthReq) GetUserOauth() *UserOauth {
	if x != nil {
		return x.UserOauth
	}
	return nil
}

type UpdateUserOauthRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse *BaseResponse `protobuf:"bytes,1,opt,name=baseResponse,proto3" json:"baseResponse,omitempty"`
	UserOauth    *UserOauth    `protobuf:"bytes,2,opt,name=userOauth,proto3" json:"userOauth,omitempty"`
}

func (x *UpdateUserOauthRsp) Reset() {
	*x = UpdateUserOauthRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserOauthRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserOauthRsp) ProtoMessage() {}

func (x *UpdateUserOauthRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserOauthRsp.ProtoReflect.Descriptor instead.
func (*UpdateUserOauthRsp) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateUserOauthRsp) GetBaseResponse() *BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *UpdateUserOauthRsp) GetUserOauth() *UserOauth {
	if x != nil {
		return x.UserOauth
	}
	return nil
}

type UserOauth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform   string `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"` // 平台:wechat=微信
	OpenId     string `protobuf:"bytes,2,opt,name=openId,proto3" json:"openId,omitempty"`
	Unionid    string `protobuf:"bytes,3,opt,name=unionid,proto3" json:"unionid,omitempty"`
	Sex        int32  `protobuf:"varint,4,opt,name=sex,proto3" json:"sex,omitempty"`
	Name       string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Avatar     string `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Sessionkey string `protobuf:"bytes,7,opt,name=sessionkey,proto3" json:"sessionkey,omitempty"`
	UId        uint64 `protobuf:"varint,8,opt,name=uId,proto3" json:"uId,omitempty"` // 用户id
}

func (x *UserOauth) Reset() {
	*x = UserOauth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOauth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOauth) ProtoMessage() {}

func (x *UserOauth) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOauth.ProtoReflect.Descriptor instead.
func (*UserOauth) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{6}
}

func (x *UserOauth) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *UserOauth) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *UserOauth) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

func (x *UserOauth) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *UserOauth) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserOauth) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserOauth) GetSessionkey() string {
	if x != nil {
		return x.Sessionkey
	}
	return ""
}

func (x *UserOauth) GetUId() uint64 {
	if x != nil {
		return x.UId
	}
	return 0
}

type GenerateTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"` // 用户id
}

func (x *GenerateTokenReq) Reset() {
	*x = GenerateTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTokenReq) ProtoMessage() {}

func (x *GenerateTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTokenReq.ProtoReflect.Descriptor instead.
func (*GenerateTokenReq) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{7}
}

func (x *GenerateTokenReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GenerateTokenRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse *BaseResponse `protobuf:"bytes,1,opt,name=baseResponse,proto3" json:"baseResponse,omitempty"`
	Token        string        `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GenerateTokenRsp) Reset() {
	*x = GenerateTokenRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateTokenRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTokenRsp) ProtoMessage() {}

func (x *GenerateTokenRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTokenRsp.ProtoReflect.Descriptor instead.
func (*GenerateTokenRsp) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{8}
}

func (x *GenerateTokenRsp) GetBaseResponse() *BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *GenerateTokenRsp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ParseTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ParseTokenReq) Reset() {
	*x = ParseTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseTokenReq) ProtoMessage() {}

func (x *ParseTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseTokenReq.ProtoReflect.Descriptor instead.
func (*ParseTokenReq) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{9}
}

func (x *ParseTokenReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ParseTokenRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse *BaseResponse `protobuf:"bytes,1,opt,name=baseResponse,proto3" json:"baseResponse,omitempty"`
	Uid          uint64        `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"` // 用户id
}

func (x *ParseTokenRsp) Reset() {
	*x = ParseTokenRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseTokenRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseTokenRsp) ProtoMessage() {}

func (x *ParseTokenRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseTokenRsp.ProtoReflect.Descriptor instead.
func (*ParseTokenRsp) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{10}
}

func (x *ParseTokenRsp) GetBaseResponse() *BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *ParseTokenRsp) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type UpdateUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nick string `protobuf:"bytes,1,opt,name=nick,proto3" json:"nick,omitempty"` // 用户昵称
}

func (x *UpdateUserReq) Reset() {
	*x = UpdateUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserReq) ProtoMessage() {}

func (x *UpdateUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserReq.ProtoReflect.Descriptor instead.
func (*UpdateUserReq) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateUserReq) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

type UpdateUserRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse *BaseResponse `protobuf:"bytes,1,opt,name=baseResponse,proto3" json:"baseResponse,omitempty"`
}

func (x *UpdateUserRsp) Reset() {
	*x = UpdateUserRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRsp) ProtoMessage() {}

func (x *UpdateUserRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRsp.ProtoReflect.Descriptor instead.
func (*UpdateUserRsp) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateUserRsp) GetBaseResponse() *BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

type AddUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nick  string `protobuf:"bytes,1,opt,name=nick,proto3" json:"nick,omitempty"`   // 用户昵称
	Phone string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"` // 用户手机号
}

func (x *AddUserReq) Reset() {
	*x = AddUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserReq) ProtoMessage() {}

func (x *AddUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserReq.ProtoReflect.Descriptor instead.
func (*AddUserReq) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{13}
}

func (x *AddUserReq) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *AddUserReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type AddUserRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse *BaseResponse `protobuf:"bytes,1,opt,name=baseResponse,proto3" json:"baseResponse,omitempty"`
	Uid          uint64        `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"` // 用户id
}

func (x *AddUserRsp) Reset() {
	*x = AddUserRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserRsp) ProtoMessage() {}

func (x *AddUserRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserRsp.ProtoReflect.Descriptor instead.
func (*AddUserRsp) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{14}
}

func (x *AddUserRsp) GetBaseResponse() *BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *AddUserRsp) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GetFromUidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"` // 用户id
}

func (x *GetFromUidReq) Reset() {
	*x = GetFromUidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFromUidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFromUidReq) ProtoMessage() {}

func (x *GetFromUidReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFromUidReq.ProtoReflect.Descriptor instead.
func (*GetFromUidReq) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{15}
}

func (x *GetFromUidReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GetFromUidRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse *BaseResponse `protobuf:"bytes,1,opt,name=baseResponse,proto3" json:"baseResponse,omitempty"`
	UserInfo     *UserInfo     `protobuf:"bytes,2,opt,name=userInfo,proto3" json:"userInfo,omitempty"` // 用户信息
}

func (x *GetFromUidRsp) Reset() {
	*x = GetFromUidRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFromUidRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFromUidRsp) ProtoMessage() {}

func (x *GetFromUidRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFromUidRsp.ProtoReflect.Descriptor instead.
func (*GetFromUidRsp) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{16}
}

func (x *GetFromUidRsp) GetBaseResponse() *BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *GetFromUidRsp) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`    // 用户id
	Nick  string `protobuf:"bytes,2,opt,name=nick,proto3" json:"nick,omitempty"`   // 用户昵称
	Phone string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"` // 用户手机号
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{17}
}

func (x *UserInfo) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserInfo) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *UserInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type GetFromPhoneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"` // 手机号
}

func (x *GetFromPhoneReq) Reset() {
	*x = GetFromPhoneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFromPhoneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFromPhoneReq) ProtoMessage() {}

func (x *GetFromPhoneReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFromPhoneReq.ProtoReflect.Descriptor instead.
func (*GetFromPhoneReq) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{18}
}

func (x *GetFromPhoneReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type GetFromPhoneRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse *BaseResponse `protobuf:"bytes,1,opt,name=baseResponse,proto3" json:"baseResponse,omitempty"`
	UserInfo     *UserInfo     `protobuf:"bytes,2,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
}

func (x *GetFromPhoneRsp) Reset() {
	*x = GetFromPhoneRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFromPhoneRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFromPhoneRsp) ProtoMessage() {}

func (x *GetFromPhoneRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFromPhoneRsp.ProtoReflect.Descriptor instead.
func (*GetFromPhoneRsp) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{19}
}

func (x *GetFromPhoneRsp) GetBaseResponse() *BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *GetFromPhoneRsp) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{20}
}

func (x *Error) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type BaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *BaseResponse) Reset() {
	*x = BaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_user_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResponse) ProtoMessage() {}

func (x *BaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResponse.ProtoReflect.Descriptor instead.
func (*BaseResponse) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{21}
}

func (x *BaseResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BaseResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_user_user_proto protoreflect.FileDescriptor

var file_user_user_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1e, 0x6d, 0x75, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x22, 0x5c, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x47, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4f, 0x61,
	0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x75, 0x2e, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73,
	0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f,
	0x61, 0x75, 0x74, 0x68, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x22,
	0x8d, 0x01, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6d, 0x75,
	0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22,
	0x5a, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x12, 0x47, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x75, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x61, 0x75, 0x74, 0x68,
	0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x22, 0x33, 0x0a, 0x0f, 0x41,
	0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x52, 0x73, 0x70, 0x12, 0x20,
	0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x49, 0x64,
	0x22, 0xaf, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4f,
	0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x12, 0x50, 0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x6d, 0x75, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d,
	0x75, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4f, 0x61, 0x75,
	0x74, 0x68, 0x22, 0xaf, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x52, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0c, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x6d, 0x75, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x62,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x6d, 0x75, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4f,
	0x61, 0x75, 0x74, 0x68, 0x22, 0xc9, 0x01, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x61, 0x75,
	0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73,
	0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x6b, 0x65, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x49, 0x64,
	0x22, 0x24, 0x0a, 0x10, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x7a, 0x0a, 0x10, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0c, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x6d, 0x75, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x25, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x73, 0x0a, 0x0d, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0c, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x6d, 0x75, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x23,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x69, 0x63, 0x6b, 0x22, 0x61, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6d, 0x75, 0x2e,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x73, 0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x70,
	0x0a, 0x0a, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0c,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6d, 0x75, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f,
	0x6f, 0x6b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x22, 0x21, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x55,
	0x69, 0x64, 0x52, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6d, 0x75,
	0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x75, 0x2e, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73,
	0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x46, 0x0a,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x27, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6d,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0xa9,
	0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52,
	0x73, 0x70, 0x12, 0x50, 0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6d, 0x75, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x72,
	0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x75, 0x2e, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x72, 0x76, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x35, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x65, 0x0a, 0x0c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3b, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x75, 0x2e,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x73, 0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0x9a, 0x06, 0x0a, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x6c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x64, 0x12,
	0x2d, 0x2e, 0x6d, 0x75, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x2d,
	0x2e, 0x6d, 0x75, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x64, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x72, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x2f, 0x2e, 0x6d, 0x75, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x2f, 0x2e, 0x6d, 0x75, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2a,
	0x2e, 0x6d, 0x75, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x6d, 0x75, 0x2e,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x73, 0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x6d, 0x75, 0x2e, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x72, 0x76, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x6d, 0x75, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x0d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x30, 0x2e, 0x6d, 0x75, 0x2e, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x72, 0x76,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x6d, 0x75, 0x2e, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73,
	0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6c, 0x0a,
	0x0a, 0x50, 0x61, 0x72, 0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2d, 0x2e, 0x6d, 0x75,
	0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x6d, 0x75, 0x2e,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x73, 0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x73,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x0e, 0x55,
	0x73, 0x65, 0x72, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x31, 0x2e,
	0x6d, 0x75, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x31, 0x2e, 0x6d, 0x75, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x62, 0x6f, 0x6f, 0x6b,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x73, 0x70, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_user_proto_rawDescOnce sync.Once
	file_user_user_proto_rawDescData = file_user_user_proto_rawDesc
)

func file_user_user_proto_rawDescGZIP() []byte {
	file_user_user_proto_rawDescOnce.Do(func() {
		file_user_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_user_proto_rawDescData)
	})
	return file_user_user_proto_rawDescData
}

var file_user_user_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_user_user_proto_goTypes = []interface{}{
	(*UserOauthLoginReq)(nil),  // 0: mu.micro.book.user.srv.service.UserOauthLoginReq
	(*UserOauthLoginRsp)(nil),  // 1: mu.micro.book.user.srv.service.UserOauthLoginRsp
	(*AddUserOauthReq)(nil),    // 2: mu.micro.book.user.srv.service.AddUserOauthReq
	(*AddUserOauthRsp)(nil),    // 3: mu.micro.book.user.srv.service.AddUserOauthRsp
	(*UpdateUserOauthReq)(nil), // 4: mu.micro.book.user.srv.service.UpdateUserOauthReq
	(*UpdateUserOauthRsp)(nil), // 5: mu.micro.book.user.srv.service.UpdateUserOauthRsp
	(*UserOauth)(nil),          // 6: mu.micro.book.user.srv.service.UserOauth
	(*GenerateTokenReq)(nil),   // 7: mu.micro.book.user.srv.service.GenerateTokenReq
	(*GenerateTokenRsp)(nil),   // 8: mu.micro.book.user.srv.service.GenerateTokenRsp
	(*ParseTokenReq)(nil),      // 9: mu.micro.book.user.srv.service.ParseTokenReq
	(*ParseTokenRsp)(nil),      // 10: mu.micro.book.user.srv.service.ParseTokenRsp
	(*UpdateUserReq)(nil),      // 11: mu.micro.book.user.srv.service.UpdateUserReq
	(*UpdateUserRsp)(nil),      // 12: mu.micro.book.user.srv.service.UpdateUserRsp
	(*AddUserReq)(nil),         // 13: mu.micro.book.user.srv.service.AddUserReq
	(*AddUserRsp)(nil),         // 14: mu.micro.book.user.srv.service.AddUserRsp
	(*GetFromUidReq)(nil),      // 15: mu.micro.book.user.srv.service.GetFromUidReq
	(*GetFromUidRsp)(nil),      // 16: mu.micro.book.user.srv.service.GetFromUidRsp
	(*UserInfo)(nil),           // 17: mu.micro.book.user.srv.service.UserInfo
	(*GetFromPhoneReq)(nil),    // 18: mu.micro.book.user.srv.service.GetFromPhoneReq
	(*GetFromPhoneRsp)(nil),    // 19: mu.micro.book.user.srv.service.GetFromPhoneRsp
	(*Error)(nil),              // 20: mu.micro.book.user.srv.service.Error
	(*BaseResponse)(nil),       // 21: mu.micro.book.user.srv.service.BaseResponse
}
var file_user_user_proto_depIdxs = []int32{
	6,  // 0: mu.micro.book.user.srv.service.UserOauthLoginReq.userOauth:type_name -> mu.micro.book.user.srv.service.UserOauth
	21, // 1: mu.micro.book.user.srv.service.UserOauthLoginRsp.baseResponse:type_name -> mu.micro.book.user.srv.service.BaseResponse
	6,  // 2: mu.micro.book.user.srv.service.AddUserOauthReq.userOauth:type_name -> mu.micro.book.user.srv.service.UserOauth
	21, // 3: mu.micro.book.user.srv.service.UpdateUserOauthReq.baseResponse:type_name -> mu.micro.book.user.srv.service.BaseResponse
	6,  // 4: mu.micro.book.user.srv.service.UpdateUserOauthReq.userOauth:type_name -> mu.micro.book.user.srv.service.UserOauth
	21, // 5: mu.micro.book.user.srv.service.UpdateUserOauthRsp.baseResponse:type_name -> mu.micro.book.user.srv.service.BaseResponse
	6,  // 6: mu.micro.book.user.srv.service.UpdateUserOauthRsp.userOauth:type_name -> mu.micro.book.user.srv.service.UserOauth
	21, // 7: mu.micro.book.user.srv.service.GenerateTokenRsp.baseResponse:type_name -> mu.micro.book.user.srv.service.BaseResponse
	21, // 8: mu.micro.book.user.srv.service.ParseTokenRsp.baseResponse:type_name -> mu.micro.book.user.srv.service.BaseResponse
	21, // 9: mu.micro.book.user.srv.service.UpdateUserRsp.baseResponse:type_name -> mu.micro.book.user.srv.service.BaseResponse
	21, // 10: mu.micro.book.user.srv.service.AddUserRsp.baseResponse:type_name -> mu.micro.book.user.srv.service.BaseResponse
	21, // 11: mu.micro.book.user.srv.service.GetFromUidRsp.baseResponse:type_name -> mu.micro.book.user.srv.service.BaseResponse
	17, // 12: mu.micro.book.user.srv.service.GetFromUidRsp.userInfo:type_name -> mu.micro.book.user.srv.service.UserInfo
	21, // 13: mu.micro.book.user.srv.service.GetFromPhoneRsp.baseResponse:type_name -> mu.micro.book.user.srv.service.BaseResponse
	17, // 14: mu.micro.book.user.srv.service.GetFromPhoneRsp.userInfo:type_name -> mu.micro.book.user.srv.service.UserInfo
	20, // 15: mu.micro.book.user.srv.service.BaseResponse.error:type_name -> mu.micro.book.user.srv.service.Error
	15, // 16: mu.micro.book.user.srv.service.User.GetFromUid:input_type -> mu.micro.book.user.srv.service.GetFromUidReq
	18, // 17: mu.micro.book.user.srv.service.User.GetFromPhone:input_type -> mu.micro.book.user.srv.service.GetFromPhoneReq
	13, // 18: mu.micro.book.user.srv.service.User.AddUser:input_type -> mu.micro.book.user.srv.service.AddUserReq
	11, // 19: mu.micro.book.user.srv.service.User.UpdateUser:input_type -> mu.micro.book.user.srv.service.UpdateUserReq
	7,  // 20: mu.micro.book.user.srv.service.User.GenerateToken:input_type -> mu.micro.book.user.srv.service.GenerateTokenReq
	9,  // 21: mu.micro.book.user.srv.service.User.ParseToken:input_type -> mu.micro.book.user.srv.service.ParseTokenReq
	0,  // 22: mu.micro.book.user.srv.service.User.UserOauthLogin:input_type -> mu.micro.book.user.srv.service.UserOauthLoginReq
	16, // 23: mu.micro.book.user.srv.service.User.GetFromUid:output_type -> mu.micro.book.user.srv.service.GetFromUidRsp
	19, // 24: mu.micro.book.user.srv.service.User.GetFromPhone:output_type -> mu.micro.book.user.srv.service.GetFromPhoneRsp
	14, // 25: mu.micro.book.user.srv.service.User.AddUser:output_type -> mu.micro.book.user.srv.service.AddUserRsp
	12, // 26: mu.micro.book.user.srv.service.User.UpdateUser:output_type -> mu.micro.book.user.srv.service.UpdateUserRsp
	8,  // 27: mu.micro.book.user.srv.service.User.GenerateToken:output_type -> mu.micro.book.user.srv.service.GenerateTokenRsp
	10, // 28: mu.micro.book.user.srv.service.User.ParseToken:output_type -> mu.micro.book.user.srv.service.ParseTokenRsp
	1,  // 29: mu.micro.book.user.srv.service.User.UserOauthLogin:output_type -> mu.micro.book.user.srv.service.UserOauthLoginRsp
	23, // [23:30] is the sub-list for method output_type
	16, // [16:23] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_user_user_proto_init() }
func file_user_user_proto_init() {
	if File_user_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOauthLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOauthLoginRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserOauthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserOauthRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserOauthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserOauthRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOauth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateTokenRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseTokenRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFromUidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFromUidRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFromPhoneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFromPhoneRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_user_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_user_proto_goTypes,
		DependencyIndexes: file_user_user_proto_depIdxs,
		MessageInfos:      file_user_user_proto_msgTypes,
	}.Build()
	File_user_user_proto = out.File
	file_user_user_proto_rawDesc = nil
	file_user_user_proto_goTypes = nil
	file_user_user_proto_depIdxs = nil
}
